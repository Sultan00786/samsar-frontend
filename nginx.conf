server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Enhanced gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 256;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/vnd.ms-fontobject
        application/wasm
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/bmp
        image/svg+xml
        text/cache-manifest
        text/calendar
        text/css
        text/javascript
        text/markdown
        text/plain
        text/xml
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    # Brotli compression with higher level for static files
    brotli on;
    brotli_comp_level 9;  # Higher compression for static files
    brotli_min_length 20; # Skip very small files
    brotli_types *;       # Try to compress all MIME types
    brotli_static on;
    brotli_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/vnd.ms-fontobject
        application/wasm
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/bmp
        image/svg+xml
        text/cache-manifest
        text/calendar
        text/css
        text/javascript
        text/markdown
        text/plain
        text/xml
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    # Block common bots, scrapers, and empty user agents
    if ($http_user_agent ~* (curl|wget|httpie|bot|spider|crawl|scraper|python|perl|ruby|java|php|node|go-http-client|libwww|winhttp|apachebench|siege|nmap|sqlmap|nikto|metasploit|burp|zap|owasp|acunetix|nessus|openvas|nikto|w3af|skipfish|gobuster|dirbuster|hydra|medusa|sqlsus|havij|sqlninja|sqli|sql-|xss-|xsser|wpscan|joomscan|drupwn|drupal|joomla|wordpress|wp-|wp_|wp\.|wp/)) {
        return 403;
    }
    
    # Block empty user agents
    if ($http_user_agent ~ ^-?$) {
        return 403;
    }

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' data: https:; connect-src 'self' https:; frame-ancestors 'self'; form-action 'self'; base-uri 'self';" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header X-Download-Options "noopen" always;
    add_header X-DNS-Prefetch-Control on;

    # Cache control for assets (non-fonts)
    location ~* \.(js|css|png|jpe?g|gif|ico|svg|webp|avif|mp4|webm|ogv|mp3|wav|ogg)$ {
        expires 1y;
        add_header Cache-Control "public, no-transform, immutable";
        access_log off;
        log_not_found off;
        
        # Enable brotli and gzip static file serving
        brotli_static on;
        gzip_static on;
        
        # Security headers for assets
        add_header X-Content-Type-Options "nosniff" always;
        try_files $uri =404;
    }
    
    # Font files with CORS
    location ~* \.(eot|ttf|woff|woff2)$ {
        expires 1y;
        add_header Cache-Control "public, no-transform, immutable";
        add_header Access-Control-Allow-Origin *;
        access_log off;
        log_not_found off;
        
        # Enable brotli and gzip static file serving
        brotli_static on;
        gzip_static on;
        
        # Security headers for fonts
        add_header X-Content-Type-Options "nosniff" always;
        try_files $uri =404;
    }
    
    # Cache WebAssembly files
    location ~* \.(wasm)$ {
        expires max;
        add_header Cache-Control "public, no-transform, immutable";
        default_type application/wasm;
        try_files $uri =404;
    }

    # HTML files - no cache for HTML
    location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        add_header Pragma "no-cache";
        add_header Expires "0";
        try_files $uri $uri/ /index.html;
    }

    # Rate limiting for API endpoints
    limit_req zone=api_limit burst=20 nodelay;
    
    # API proxy with caching and rate limiting
    location /api/ {
        proxy_pass http://backend:3001/;
        proxy_http_version 1.1;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer size
        proxy_buffer_size 4k;
        proxy_buffers 8 16k;
        proxy_busy_buffers_size 32k;
        
        # Cache settings for GET requests
        proxy_cache api_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 301 302 10m;
        proxy_cache_valid 404 1m;
        
        # Don't cache these methods
        proxy_no_cache $http_pragma $http_authorization $cookie_nocache;
        
        # Security headers for API
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        # Handle preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    


    # Handle SPA routing with cache control
    location / {
        try_files $uri $uri/ /index.html;
        
        # Security headers for SPA
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Disable caching for HTML
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        expires -1;
        
        # Enable gzip and brotli for SPA
        gzip_static on;
        brotli_static on;
    }

    # Disable access to .git and other sensitive files
    location ~ /\.(?!well-known) {
        deny all;
    }

    # Disable access to node_modules
    location ~* ^/node_modules/ {
        deny all;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
